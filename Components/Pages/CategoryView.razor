@page "/CategoryView/{categoryName}"

<div class="general">
     <div class="categoryTitle">
          <h1>@category.Name</h1>
     </div>

     @foreach (KeyValuePair<string, Concept> concept in category.Concepts)
     {
          <div class=conceptCard>
               <div class="concept">
                    <h2>@concept.Value.Name</h2>
               </div>

               @foreach (KeyValuePair<string, Rubro> rubro in concept.Value.Rubros)
               {
                    <div class="rubroCard">
                         <h3>@rubro.Value.Name</h3>
                    </div>
               }
               <button class="rubroCard" @onclick="@(()=>ToggleNewRubro(concept.Value))">
                    <svg xmlns=" http://www.w3.org/2000/svg" fill="#ffffff"
                         viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                         <path
                              d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z" />
                    </svg>
               </button>
          </div>
     }
     <button class="conceptCard" @onclick="ToggleNewConcept">
          <svg xmlns="http://www.w3.org/2000/svg" fill="#ffffff"
               viewBox="0 0 448 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
               <path
                    d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32V224H48c-17.7 0-32 14.3-32 32s14.3 32 32 32H192V432c0 17.7 14.3 32 32 32s32-14.3 32-32V288H400c17.7 0 32-14.3 32-32s-14.3-32-32-32H256V80z" />
          </svg>
     </button>
     @if (mostrarNuevoConcepto)
     {
          <NewConcept Toggle=@ToggleNewConcept Category=@category />
     }
     @if (mostrarNuevoRubro)
     {
          <NewRubro Toggle=@ToggleNewRubro Concept=@activeConcept />
     }
</div>

@code {
     [Parameter]
     public string CategoryName { get; set; } = "";
     Category? category;
     Concept? activeConcept;
     bool mostrarNuevoConcepto = false;
     bool mostrarNuevoRubro = false;
     protected override void OnParametersSet()
     {
          base.OnParametersSet();
          category = Category.Categories[CategoryName];
     }


     void ToggleNewConcept()
     {
          mostrarNuevoConcepto = !mostrarNuevoConcepto;
          StateHasChanged(); //Needed when a child invokes this method to rerender the page
     }
     void ToggleNewRubro(Concept concept)
     {
          if (concept is not null)
          {
               activeConcept = concept;
          }
          mostrarNuevoRubro = !mostrarNuevoRubro;
          StateHasChanged();
     }
}
