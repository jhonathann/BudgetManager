@page "/Movements"

<div class="general">
     <div class=topPanel>
          <div class="selectorRow">
               <button class="navButton" @onclick="() => UpdateInfo(year - 1, month)">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                         <path
                              d="M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z" />
                    </svg>
               </button>
               <h2>@year</h2>
               <button class="navButton" @onclick="() => UpdateInfo(year + 1, month)">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                         <path
                              d="M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z" />
                    </svg>
               </button>
          </div>
          <div class="selectorRow">
               <button class="navButton" @onclick="() => UpdateInfo(year, month - 1)">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                         <path
                              d="M41.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.3 256 246.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z" />
                    </svg>
               </button>
               <h2>@IntMonthToStringMonth(month)</h2>
               <button class="navButton" @onclick="() => UpdateInfo(year, month + 1)">
                    <svg xmlns="http://www.w3.org/2000/svg"
                         viewBox="0 0 320 512"><!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                         <path
                              d="M278.6 233.4c12.5 12.5 12.5 32.8 0 45.3l-160 160c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L210.7 256 73.4 118.6c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0l160 160z" />
                    </svg>
               </button>
          </div>
     </div>
     <div class="bottomPanel">
          @foreach (Movement movement in budgetMonth.Movements.Reverse<Movement>())
          {
               <MovementCard Movement=@movement OnDelete="() => { budgetMonth.RemoveMovement(movement); StateHasChanged(); }" />
          }
     </div>

</div>
@code {
     private int year = DateTime.Now.Year;
     private int month = DateTime.Now.Month;
     private BudgetMonth budgetMonth = default!;
     protected override async Task OnInitializedAsync()
     {
          budgetMonth = await BudgetMonth.GetBudgetMonth(year, month);
          //Subscribe to category events to rerender
          Category.CategoryCreated += (category) => this.StateHasChanged();
          Category.CategoryRenamed += (category, newName) => this.StateHasChanged();
          Category.CategoryDeleted += (category) => this.StateHasChanged();
     }
     private async void UpdateInfo(int newYear, int newMonth)
     {
          if (newYear > DateTime.Now.Year) return;
          if (newMonth < 1 || newMonth > DateTime.Now.Month) return;
          year = newYear;
          month = newMonth;
          budgetMonth = await BudgetMonth.GetBudgetMonth(year, month);
          StateHasChanged();
     }
     private string IntMonthToStringMonth(int month)
     {
          string[] months = { "January", "February", "March", "April", "May", "June","July", "August", "September", "October",
"November", "December" };
          return months[month - 1];
     }
}